enclave {
	from "../sgx-lib/sgx_lib_t/sgx_lib.edl" import *;

	include "kissdb.h"
    trusted {
		public int KISSDB_open_ecall([in, string, readonly] const char *path, int mode, unsigned long hash_table_size, unsigned long key_size, unsigned long value_size);
		public void KISSDB_close_ecall();
		public int KISSDB_get_ecall([in, size=key_size] const void *key, [out, size=value_size] void *vbuf, unsigned long key_size, unsigned long value_size);
		public int KISSDB_put_ecall([in, size=key_size] const void *key, [in, size=value_size] const void *value, unsigned long key_size, unsigned long value_size);
		
		/* dbi->db (KISSDB instance) should not be passed (set to NULL pointer instead), as this struct is defined differently in the untrusted application and enclave */
		public int KISSDB_Iterator_next_ecall([in, out] KISSDB_Iterator *dbi, [out, size=key_size] void *kbuf, [out, size=value_size] void *vbuf, unsigned long key_size, unsigned long value_size);
    };

    untrusted {
        /* define OCALLs here. */
    
    };
};
